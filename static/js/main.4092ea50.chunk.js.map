{"version":3,"sources":["Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/ContactForm/ContactForm.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css"],"names":["ContactList","contacts","onDeleteId","className","s","ContactsList","map","name","id","number","onClick","Filter","filterVal","onChange","htmlFor","type","value","pattern","title","ContactForm","state","inputNameId","uuidv4","inputNumberId","handleChange","e","target","setState","handleSubmit","preventDefault","props","onSubmit","this","Phonebook","required","Component","App","filter","submitId","formSubmitHandle","data","contact","result","some","alert","prevState","inputSearchChange","inputContactSearch","searchValue","toLowerCase","includes","deleteContact","contactId","contactsLocal","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4092ea50.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteId }) => {\r\n  return (\r\n    <div className={s.ContactsList}>\r\n      <ul>\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id}>\r\n            <p>{name + ': ' + number}</p>\r\n            <button onClick={() => onDeleteId(id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteId: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filterVal, onChange }) => {\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label htmlFor=\"\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={filterVal}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterVal: PropTypes.object,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputNameId = uuidv4();\r\n  inputNumberId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, handleChange } = this;\r\n\r\n    return (\r\n      <div className={s.Phonebook}>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor={this.inputNameId}>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            id={this.inputNameId}\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor={this.inputNumberId}>Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            id={this.inputNumberId}\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\">Add contacts</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  submitId = uuidv4();\n\n  formSubmitHandle = data => {\n    const contact = {\n      id: this.submitId,\n      name: data.name,\n      number: data.number,\n    };\n\n    const result = this.state.contacts.some(\n      value => value.name === contact.name,\n    );\n\n    if (!result) {\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    } else if (result) {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  inputSearchChange = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  inputContactSearch = e => {\n    const { filter, contacts } = this.state;\n    const searchValue = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(searchValue),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: this.state.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contactsLocal = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contactsLocal);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const { inputSearchChange, deleteContact, formSubmitHandle } = this;\n    const visibleContacts = this.inputContactSearch();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandle} />\n        <h1>Contacts</h1>\n        <Filter value={filter} onChange={inputSearchChange} />\n        <ContactList contacts={visibleContacts} onDeleteId={deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactList_ContactsList__3Ec6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1_Tu6\"};"],"sourceRoot":""}